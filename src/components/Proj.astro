---
import GitHub from "../icons/GitHub.astro";
import Firebase from "../icons/Firebase.astro";
import Swift from "../icons/Swift.astro";
import Android from "../icons/Android.astro";
import Kotlin from "../icons/Kotlin.astro";
import ReactN from "../icons/ReactN.astro";
import Java from "../icons/Java.astro";
import Html from "../icons/Html.astro";
import BS5 from "../icons/BS5.astro";
import MySQL from "../icons/MySQL.astro";
import Python from "../icons/Python.astro";
import AstroSVG from "../icons/AstroSVG.astro";
import Link from "../icons/Link.astro";
import Golang from "../icons/Golang.astro";
import LinkButton from "../components/LinkButton.astro";
import ReactNN from "../icons/ReactNN.astro";
import Expo from "../icons/Expo.astro";

const TAGS = {
  FIRE: {
    name: "Firebase",
    class: "bg-[#4c4c4c] text-white",
    icon: Firebase,
  },
  TAILWIND: {
    name: "Tailwind",
    class: "bg-[#003159] text-white",
    icon: ReactN,
  },
  ASTRO: {
    name: "Astro",
    class: "bg-[#23262f] text-white",
    icon: AstroSVG,
  },
  KOTLIN: {
    name: "Kotlin",
    class: "bg-[#5c5c5c] text-white",
    icon: Kotlin,
  },
  PYTHON: {
    name: "Python",
    class: "bg-yellow-600 text-white",
    icon: Python,
  },
  GO: {
    name: "Golang",
    class: "bg-blue-400 text-white",
    icon: Golang,
  },
  JAVA: {
    name: "Java",
    class: "bg-red-800 text-white",
    icon: Java,
  },
  SQL: {
    name: "SQL",
    class: "bg-[#5c5c5c] text-white",
    icon: MySQL,
  },
  HTML: {
    name: "HTML",
    class: "bg-orange-800 text-white",
    icon: Html,
  },
  BS5: {
    name: "BS5",
    class: "bg-purple-900 text-white",
    icon: BS5,
  },
  ANDROID: {
    name: "Android",
    class: "bg-green-400 text-white",
    icon: Android,
  },
  RN: {
    name: "React Native",
    class: "bg-blue-800 text-white",
    icon: ReactNN,
  },
  EXPO: {
    name: "Expo",
    class: "bg-gray-900 text-white",
    icon: Expo,
  },
}
const PROJECTS = [
  {
    title: "Muebles el puente TFG",
    description:
      "Proyecto de trabajo de fin de grado, donde creo mi propia API con FastApi la web con Astro y la app con Kotlin, para una empresa de muebles. He usado servicios como firebase y retrofit con Kotlin también.",
    github: "https://github.com/alesguga/MueblesElPuenteAppTFG",
    image: "../../logomep.png",
    tags: [ TAGS.FIRE, TAGS.ASTRO, TAGS.KOTLIN, TAGS.PYTHON],
  },
  {
    title: "Chistes Retrofit",
    description:
      "Aplicación en Android Studio en Kotlin que accedemos a una api mediante Retrofit que tiene login categorias de chistes buscador y permite introducir nuevos chistes",
    github: "https://github.com/alesguga/ChistesRetrofit",
    image: "https://piks.eldesmarque.com/bin/2023/06/07/230606_dep_betis_homenaje_joaquin_zona_mixtamovmxf_frame_10538.jpeg",
    tags: [ TAGS.KOTLIN, TAGS.ANDROID],
  },
  {
    title: "Mi primera api con Go y Firebase",
    description:
      "Realizo mi primera api con Golang y Firebase donde se puede realizar un CRUD y funciona a la perfeccion con un Front en React por ejemplo.",
    github: "https://github.com/alesguga/MueblesElPuenteAppTFG",
    image: "https://www.freecodecamp.org/news/content/images/2021/10/golang.png",
    tags: [ TAGS.GO, TAGS.FIRE],
  },
  {
    title: "PorraGut",
    description:
      "Web usando JavaWeb con JPA, JSTL, Ajax y una BBDD en Oracle para hacer una web de apuestas de goles de partidos de futbol de la liga española.",
    github: "https://github.com/alesguga/PorraGutJPA",
    image: "https://www.mundiario.com/asset/thumbnail,1280,720,center,center/media/mundiario/images/2023/08/13/2023081312144866046.jpg",
    tags: [ TAGS.JAVA, TAGS.SQL, TAGS.HTML, TAGS.BS5],
  },
  {
    title: "Games4All",
    description:
      "Aplicacion en React Native que busca videojuegos accediendo a una Api, cuenta con unos filtros de busqueda y diseño para Apple y Android",
    github: "https://github.com/alesguga/AppConsumesApiRN",
    image: "https://assets.xboxservices.com/assets/1d/5b/1d5bc84f-2135-4e2f-8ca6-bb000d97db7f.jpg?n=Elden-Ring_GLP-Poster-Image-1084_1920x1080.jpg",
    tags: [ TAGS.RN, TAGS.EXPO],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Código
              
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>